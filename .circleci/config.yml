version: 2.1

executors:
  golang:
    docker:
      - image: cimg/go:1.14

commands:
  attach_to_workspace:
    steps:
      - attach_workspace:
          at: ~/

  save_module_cache:
    steps:
      - save_cache:
          key: cimg-go-pkg-mod-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/go/pkg/mod"

  restore_module_cache:
    steps:
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - cimg-go-pkg-mod-{{ checksum "go.sum" }}
      - persist_to_workspace:
          root: ~/
          paths: go/pkg/mod

workflows:
  version: 2
  build-and-test:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - build:
          requires:
            - lint
      - loadtest:
          requires:
            - build
      - test:
          requires:
            - lint
      - coverage:
          requires:
            - lint
      - publish:
          requires:
            - loadtest
            - test
            - coverage
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9].[0-9].[0-9]+.*/

jobs:
  setup:
    executor: golang
    steps:
      - checkout
      - restore_module_cache
      - persist_to_workspace:
          root: ~/
          paths: project
      - run:
          name: Install tools
          command: make install-tools
      - persist_to_workspace:
          root: ~/
          paths: go/bin

  lint:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Lint
          command: make checklicense impi lint misspell

  build:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Build collector 
          command: make binaries-all-sys
      - persist_to_workspace:
          root: ~/
          paths: project/bin

  loadtest:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Loadtest
          command: make -C testbed runtests
      - store_artifacts:
          path: testbed/tests/results
      - store_test_results:
          path: testbed/tests/results/junit

  test:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Unit tests
          command: make test
      - save_module_cache

  coverage:
    executor: golang
    steps:
      - attach_to_workspace
      - run:
          name: Install packages.
          command: sudo apt update && sudo apt-get install bzr time
      - run:
          name: Coverage tests
          command: make test-with-cover
      - run:
          name: Code coverage
          command: bash <(curl -s https://codecov.io/bash)

  publish:
    docker:
      - image: cimg/go:1.14
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            make docker-otelcol
            docker tag otelcol:latest omnition/opentelemetry-collector:${CIRCLE_TAG:1}
            docker tag otelcol:latest omnition/opentelemetry-collector:latest
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      - run:
          name: Push image
          command: |
            docker push omnition/opentelemetry-collector:${CIRCLE_TAG:1}
            docker push omnition/opentelemetry-collector:latest
