// Copyright The OpenTelemetry Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pprofile

import (
	"go.opentelemetry.io/collector/pdata/internal"
	"go.opentelemetry.io/collector/pdata/internal/data"
	otlpprofiles "go.opentelemetry.io/collector/pdata/internal/data/protogen/profiles/v1"
	"go.opentelemetry.io/collector/pdata/pcommon"
)

// ProfileRecord are experimental implementation of OpenTelemetry Profile Data Model.

// This is a reference type, if passed by value and callee modifies it the
// caller will see the modification.
//
// Must use NewProfileRecord function to create new instances.
// Important: zero-initialized instance is not valid for use.
type ProfileRecord struct {
	orig *otlpprofiles.ProfileRecord
}

func newProfileRecord(orig *otlpprofiles.ProfileRecord) ProfileRecord {
	return ProfileRecord{orig}
}

// NewProfileRecord creates a new empty ProfileRecord.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewProfileRecord() ProfileRecord {
	return newProfileRecord(&otlpprofiles.ProfileRecord{})
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms ProfileRecord) MoveTo(dest ProfileRecord) {
	*dest.orig = *ms.orig
	*ms.orig = otlpprofiles.ProfileRecord{}
}

// ObservedTimestamp returns the observedtimestamp associated with this ProfileRecord.
func (ms ProfileRecord) ObservedTimestamp() pcommon.Timestamp {
	return pcommon.Timestamp(ms.orig.ObservedTimeUnixNano)
}

// SetObservedTimestamp replaces the observedtimestamp associated with this ProfileRecord.
func (ms ProfileRecord) SetObservedTimestamp(v pcommon.Timestamp) {
	ms.orig.ObservedTimeUnixNano = uint64(v)
}

// Timestamp returns the timestamp associated with this ProfileRecord.
func (ms ProfileRecord) Timestamp() pcommon.Timestamp {
	return pcommon.Timestamp(ms.orig.TimeUnixNano)
}

// SetTimestamp replaces the timestamp associated with this ProfileRecord.
func (ms ProfileRecord) SetTimestamp(v pcommon.Timestamp) {
	ms.orig.TimeUnixNano = uint64(v)
}

// TraceID returns the traceid associated with this ProfileRecord.
func (ms ProfileRecord) TraceID() pcommon.TraceID {
	return pcommon.TraceID(ms.orig.TraceId)
}

// SetTraceID replaces the traceid associated with this ProfileRecord.
func (ms ProfileRecord) SetTraceID(v pcommon.TraceID) {
	ms.orig.TraceId = data.TraceID(v)
}

// SpanID returns the spanid associated with this ProfileRecord.
func (ms ProfileRecord) SpanID() pcommon.SpanID {
	return pcommon.SpanID(ms.orig.SpanId)
}

// SetSpanID replaces the spanid associated with this ProfileRecord.
func (ms ProfileRecord) SetSpanID(v pcommon.SpanID) {
	ms.orig.SpanId = data.SpanID(v)
}

// Flags returns the flags associated with this ProfileRecord.
func (ms ProfileRecord) Flags() ProfileRecordFlags {
	return ProfileRecordFlags(ms.orig.Flags)
}

// SetFlags replaces the flags associated with this ProfileRecord.
func (ms ProfileRecord) SetFlags(v ProfileRecordFlags) {
	ms.orig.Flags = uint32(v)
}

// SeverityText returns the severitytext associated with this ProfileRecord.
func (ms ProfileRecord) SeverityText() string {
	return ms.orig.SeverityText
}

// SetSeverityText replaces the severitytext associated with this ProfileRecord.
func (ms ProfileRecord) SetSeverityText(v string) {
	ms.orig.SeverityText = v
}

// SeverityNumber returns the severitynumber associated with this ProfileRecord.
func (ms ProfileRecord) SeverityNumber() SeverityNumber {
	return SeverityNumber(ms.orig.SeverityNumber)
}

// SetSeverityNumber replaces the severitynumber associated with this ProfileRecord.
func (ms ProfileRecord) SetSeverityNumber(v SeverityNumber) {
	ms.orig.SeverityNumber = otlpprofiles.SeverityNumber(v)
}

// Body returns the body associated with this ProfileRecord.
func (ms ProfileRecord) Body() pcommon.Value {
	return pcommon.Value(internal.NewValue(&ms.orig.Body))
}

// Attributes returns the Attributes associated with this ProfileRecord.
func (ms ProfileRecord) Attributes() pcommon.Map {
	return pcommon.Map(internal.NewMap(&ms.orig.Attributes))
}

// DroppedAttributesCount returns the droppedattributescount associated with this ProfileRecord.
func (ms ProfileRecord) DroppedAttributesCount() uint32 {
	return ms.orig.DroppedAttributesCount
}

// SetDroppedAttributesCount replaces the droppedattributescount associated with this ProfileRecord.
func (ms ProfileRecord) SetDroppedAttributesCount(v uint32) {
	ms.orig.DroppedAttributesCount = v
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms ProfileRecord) CopyTo(dest ProfileRecord) {
	dest.SetObservedTimestamp(ms.ObservedTimestamp())
	dest.SetTimestamp(ms.Timestamp())
	dest.SetTraceID(ms.TraceID())
	dest.SetSpanID(ms.SpanID())
	dest.SetFlags(ms.Flags())
	dest.SetSeverityText(ms.SeverityText())
	dest.SetSeverityNumber(ms.SeverityNumber())
	ms.Body().CopyTo(dest.Body())
	ms.Attributes().CopyTo(dest.Attributes())
	dest.SetDroppedAttributesCount(ms.DroppedAttributesCount())
}
