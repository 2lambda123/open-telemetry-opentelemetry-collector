// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pmetric

import (
	"go.opentelemetry.io/collector/pdata/internal"
	otlpmetrics "go.opentelemetry.io/collector/pdata/internal/data/protogen/metrics/v1"
	"go.opentelemetry.io/collector/pdata/pcommon"
)

// ResourceMetrics is a collection of metrics from a Resource.
type ResourceMetrics interface {
	commonResourceMetrics
	Resource() pcommon.Resource
	ScopeMetrics() ScopeMetricsSlice
}

type MutableResourceMetrics interface {
	commonResourceMetrics
	MoveTo(dest MutableResourceMetrics)
	Resource() pcommon.MutableResource
	SetSchemaUrl(string)
	ScopeMetrics() MutableScopeMetricsSlice
}

type commonResourceMetrics interface {
	getOrig() *otlpmetrics.ResourceMetrics
	CopyTo(dest MutableResourceMetrics)
	SchemaUrl() string
}

type immutableResourceMetrics struct {
	orig *otlpmetrics.ResourceMetrics
}

type mutableResourceMetrics struct {
	immutableResourceMetrics
}

func newImmutableResourceMetrics(orig *otlpmetrics.ResourceMetrics) immutableResourceMetrics {
	return immutableResourceMetrics{orig}
}

func newMutableResourceMetrics(orig *otlpmetrics.ResourceMetrics) mutableResourceMetrics {
	return mutableResourceMetrics{immutableResourceMetrics{orig}}
}

func (ms immutableResourceMetrics) getOrig() *otlpmetrics.ResourceMetrics {
	return ms.orig
}

// NewResourceMetrics creates a new empty ResourceMetrics.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewResourceMetrics() MutableResourceMetrics {
	return newMutableResourceMetrics(&otlpmetrics.ResourceMetrics{})
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms mutableResourceMetrics) MoveTo(dest MutableResourceMetrics) {
	*dest.getOrig() = *ms.getOrig()
	*ms.getOrig() = otlpmetrics.ResourceMetrics{}
}

// Resource returns the resource associated with this ResourceMetrics.
func (ms immutableResourceMetrics) Resource() pcommon.Resource {
	return internal.NewImmutableResource(&ms.getOrig().Resource)
}

// Resource returns the resource associated with this ResourceMetrics.
func (ms mutableResourceMetrics) Resource() pcommon.MutableResource {
	return internal.NewMutableResource(&ms.getOrig().Resource)
}

// SchemaUrl returns the schemaurl associated with this ResourceMetrics.
func (ms immutableResourceMetrics) SchemaUrl() string {
	return ms.getOrig().SchemaUrl
}

// SetSchemaUrl replaces the schemaurl associated with this ResourceMetrics.
func (ms mutableResourceMetrics) SetSchemaUrl(v string) {
	ms.getOrig().SchemaUrl = v
}

// ScopeMetrics returns the ScopeMetrics associated with this ResourceMetrics.
func (ms immutableResourceMetrics) ScopeMetrics() ScopeMetricsSlice {
	return newImmutableScopeMetricsSlice(&ms.getOrig().ScopeMetrics)
}

func (ms mutableResourceMetrics) ScopeMetrics() MutableScopeMetricsSlice {
	return newMutableScopeMetricsSlice(&ms.getOrig().ScopeMetrics)
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms immutableResourceMetrics) CopyTo(dest MutableResourceMetrics) {
	ms.Resource().CopyTo(dest.Resource())
	dest.SetSchemaUrl(ms.SchemaUrl())
	ms.ScopeMetrics().CopyTo(dest.ScopeMetrics())
}

func generateTestResourceMetrics() MutableResourceMetrics {
	tv := NewResourceMetrics()
	fillTestResourceMetrics(tv)
	return tv
}

func fillTestResourceMetrics(tv MutableResourceMetrics) {
	internal.FillTestResource(internal.NewResource(&tv.orig.Resource))
	tv.getOrig().SchemaUrl = "https://opentelemetry.io/schemas/1.5.0"
	fillTestScopeMetricsSlice(newMutableScopeMetricsSlice(&tv.getOrig().ScopeMetrics))
}
