// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pmetric

import (
	otlpmetrics "go.opentelemetry.io/collector/pdata/internal/data/protogen/metrics/v1"
)

// SummaryDataPointValueAtQuantile is a quantile value within a Summary data point.
type SummaryDataPointValueAtQuantile interface {
	commonSummaryDataPointValueAtQuantile
}

type MutableSummaryDataPointValueAtQuantile interface {
	commonSummaryDataPointValueAtQuantile
	MoveTo(dest MutableSummaryDataPointValueAtQuantile)
	SetQuantile(float64)
	SetValue(float64)
}

type commonSummaryDataPointValueAtQuantile interface {
	getOrig() *otlpmetrics.SummaryDataPoint_ValueAtQuantile
	CopyTo(dest MutableSummaryDataPointValueAtQuantile)
	Quantile() float64
	Value() float64
}

type immutableSummaryDataPointValueAtQuantile struct {
	orig *otlpmetrics.SummaryDataPoint_ValueAtQuantile
}

type mutableSummaryDataPointValueAtQuantile struct {
	immutableSummaryDataPointValueAtQuantile
}

func newImmutableSummaryDataPointValueAtQuantile(orig *otlpmetrics.SummaryDataPoint_ValueAtQuantile) immutableSummaryDataPointValueAtQuantile {
	return immutableSummaryDataPointValueAtQuantile{orig}
}

func newMutableSummaryDataPointValueAtQuantile(orig *otlpmetrics.SummaryDataPoint_ValueAtQuantile) mutableSummaryDataPointValueAtQuantile {
	return mutableSummaryDataPointValueAtQuantile{immutableSummaryDataPointValueAtQuantile{orig}}
}

func (ms immutableSummaryDataPointValueAtQuantile) getOrig() *otlpmetrics.SummaryDataPoint_ValueAtQuantile {
	return ms.orig
}

// NewSummaryDataPointValueAtQuantile creates a new empty SummaryDataPointValueAtQuantile.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewSummaryDataPointValueAtQuantile() MutableSummaryDataPointValueAtQuantile {
	return newMutableSummaryDataPointValueAtQuantile(&otlpmetrics.SummaryDataPoint_ValueAtQuantile{})
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms mutableSummaryDataPointValueAtQuantile) MoveTo(dest MutableSummaryDataPointValueAtQuantile) {
	*dest.getOrig() = *ms.getOrig()
	*ms.getOrig() = otlpmetrics.SummaryDataPoint_ValueAtQuantile{}
}

// Quantile returns the quantile associated with this SummaryDataPointValueAtQuantile.
func (ms immutableSummaryDataPointValueAtQuantile) Quantile() float64 {
	return ms.getOrig().Quantile
}

// SetQuantile replaces the quantile associated with this SummaryDataPointValueAtQuantile.
func (ms mutableSummaryDataPointValueAtQuantile) SetQuantile(v float64) {
	ms.getOrig().Quantile = v
}

// Value returns the value associated with this SummaryDataPointValueAtQuantile.
func (ms immutableSummaryDataPointValueAtQuantile) Value() float64 {
	return ms.getOrig().Value
}

// SetValue replaces the value associated with this SummaryDataPointValueAtQuantile.
func (ms mutableSummaryDataPointValueAtQuantile) SetValue(v float64) {
	ms.getOrig().Value = v
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms immutableSummaryDataPointValueAtQuantile) CopyTo(dest MutableSummaryDataPointValueAtQuantile) {
	dest.SetQuantile(ms.Quantile())
	dest.SetValue(ms.Value())
}

func generateTestSummaryDataPointValueAtQuantile() MutableSummaryDataPointValueAtQuantile {
	tv := NewSummaryDataPointValueAtQuantile()
	fillTestSummaryDataPointValueAtQuantile(tv)
	return tv
}

func fillTestSummaryDataPointValueAtQuantile(tv MutableSummaryDataPointValueAtQuantile) {
	tv.getOrig().Quantile = float64(17.13)
	tv.getOrig().Value = float64(17.13)
}
