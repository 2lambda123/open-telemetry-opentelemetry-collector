// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "pdata/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "make genpdata".

package pmetric

import (
	otlpmetrics "go.opentelemetry.io/collector/pdata/internal/data/protogen/metrics/v1"
)

// Summary represents the type of a metric that is calculated by aggregating as a Summary of all reported double measurements over a time interval.
type Summary interface {
	commonSummary
	DataPoints() SummaryDataPointSlice
}

type MutableSummary interface {
	commonSummary
	MoveTo(dest MutableSummary)
	DataPoints() MutableSummaryDataPointSlice
}

type commonSummary interface {
	getOrig() *otlpmetrics.Summary
	CopyTo(dest MutableSummary)
}

type immutableSummary struct {
	orig *otlpmetrics.Summary
}

type mutableSummary struct {
	immutableSummary
}

func newImmutableSummary(orig *otlpmetrics.Summary) immutableSummary {
	return immutableSummary{orig}
}

func newMutableSummary(orig *otlpmetrics.Summary) mutableSummary {
	return mutableSummary{immutableSummary{orig}}
}

func (ms immutableSummary) getOrig() *otlpmetrics.Summary {
	return ms.orig
}

// NewSummary creates a new empty Summary.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewSummary() MutableSummary {
	return newMutableSummary(&otlpmetrics.Summary{})
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms mutableSummary) MoveTo(dest MutableSummary) {
	*dest.getOrig() = *ms.getOrig()
	*ms.getOrig() = otlpmetrics.Summary{}
}

// DataPoints returns the DataPoints associated with this Summary.
func (ms immutableSummary) DataPoints() SummaryDataPointSlice {
	return newImmutableSummaryDataPointSlice(&ms.getOrig().DataPoints)
}

func (ms mutableSummary) DataPoints() MutableSummaryDataPointSlice {
	return newMutableSummaryDataPointSlice(&ms.getOrig().DataPoints)
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms immutableSummary) CopyTo(dest MutableSummary) {
	ms.DataPoints().CopyTo(dest.DataPoints())
}

func generateTestSummary() MutableSummary {
	tv := NewSummary()
	fillTestSummary(tv)
	return tv
}

func fillTestSummary(tv MutableSummary) {
	fillTestSummaryDataPointSlice(newMutableSummaryDataPointSlice(&tv.getOrig().DataPoints))
}
