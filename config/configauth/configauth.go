// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package configauth

import "encoding/json"
import "fmt"
import "go.opentelemetry.io/collector/component"

type Authentication struct {
	// Authenticator corresponds to the JSON schema field "authenticator".
	Authenticator component.ID `mapstructure:"authenticator"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *Authentication) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["authenticator"]; raw != nil && !ok {
		return fmt.Errorf("field authenticator in Authentication: required")
	}
	type Plain Authentication
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = Authentication(plain)
	return nil
}

// SetDefaults sets the fields of Authentication to their defaults.
// Fields which do not have a default value are left untouched.
func (c *Authentication) SetDefaults() {
}
